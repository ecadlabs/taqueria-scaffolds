{"version":3,"sources":["components/Wallet.tsx","components/Header.tsx","components/Footer.tsx","components/Interface.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wallet","Tezos","rpcUrl","setConnected","connected","useState","undefined","wallet","setWallet","setUserAddress","createWallet","walletOptions","name","preferredNetwork","NetworkType","ITHACANET","BeaconWallet","connect","a","w","requestPermissions","network","type","getPKH","userPkh","setWalletProvider","console","error","disconnect","client","destroy","useEffect","newWallet","getActiveAccount","className","onClick","src","alt","Header","Footer","contractAddress","href","target","rel","Interface","contractStorage","setContractStorage","tacosToOrder","setTacosToOrder","insufficientTacos","setInsufficientTacos","orderingTacos","setOrderingTacos","orderingTacosError","setOrderingTacosError","orderTacos","at","contract","methods","default","send","op","confirmation","value","toString","onChange","ev","val","Math","floor","style","color","disabled","App","setTezos","tezos","TezosToolkit","storage","toNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33506168.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport type { TezosToolkit } from \"@taquito/taquito\";\nimport { NetworkType } from \"@airgap/beacon-sdk\";\n\nconst Wallet = ({\n  Tezos,\n  rpcUrl,\n  setConnected,\n  connected\n}: {\n  Tezos: TezosToolkit | undefined;\n  rpcUrl: string;\n  setConnected: (p: boolean) => void;\n  connected: boolean;\n}) => {\n  const [wallet, setWallet] = useState<BeaconWallet | undefined>(undefined);\n  const [userAddress, setUserAddress] = useState<string | undefined>(undefined);\n\n  const createWallet = (): BeaconWallet => {\n    const walletOptions = {\n      name: \"Hello Tacos\",\n      preferredNetwork: NetworkType.ITHACANET\n    };\n    return new BeaconWallet(walletOptions);\n  };\n\n  const connect = async () => {\n    const w = !wallet ? createWallet() : wallet;\n    setWallet(w);\n\n    if (Tezos) {\n      try {\n        await w.requestPermissions({\n          network: {\n            type: NetworkType.ITHACANET,\n            rpcUrl\n          }\n        });\n        const userPkh = await w.getPKH();\n        setUserAddress(userPkh);\n        Tezos.setWalletProvider(wallet);\n        setConnected(true);\n      } catch (err) {\n        console.error(err);\n        setConnected(false);\n      }\n    }\n  };\n\n  const disconnect = async () => {\n    await wallet?.client.destroy();\n    setWallet(undefined);\n    setUserAddress(undefined);\n    setConnected(false);\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (Tezos) {\n        const newWallet = createWallet();\n        setWallet(newWallet);\n\n        try {\n          const activeAccount = await newWallet.client.getActiveAccount();\n          if (activeAccount) {\n            const userPkh = await newWallet.getPKH();\n            setUserAddress(userPkh);\n            Tezos.setWalletProvider(newWallet);\n            setConnected(true);\n          } else {\n            setUserAddress(undefined);\n            setConnected(false);\n          }\n        } catch (err) {\n          console.error(err);\n          setUserAddress(undefined);\n          setConnected(false);\n        }\n      }\n    })();\n  }, []);\n\n  return connected ? (\n    <button className=\"wallet\" onClick={disconnect}>\n      <img src=\"images/user-check.svg\" alt=\"user-connected\" />\n      &nbsp; Disconnect\n    </button>\n  ) : (\n    <button className=\"wallet\" onClick={connect}>\n      <img src=\"images/user-x.svg\" alt=\"user-disconnected\" />\n      &nbsp; Connect wallet\n    </button>\n  );\n};\n\nexport default Wallet;\n","import Wallet from \"./Wallet\";\nimport type { TezosToolkit } from \"@taquito/taquito\";\n\nconst Header = ({\n  Tezos,\n  rpcUrl,\n  setConnected,\n  connected\n}: {\n  Tezos: TezosToolkit | undefined;\n  rpcUrl: string;\n  setConnected: (p: boolean) => void;\n  connected: boolean;\n}) => {\n  return (\n    <header>\n      <div className=\"header__logo\">\n        <img src=\"images/logo.png\" alt=\"logo\" />\n      </div>\n      <div className=\"header__title\">\n        <h1>Hello Tacos</h1>\n      </div>\n      <div className=\"header__connection-status\">\n        <Wallet\n          Tezos={Tezos}\n          rpcUrl={rpcUrl}\n          setConnected={setConnected}\n          connected={connected}\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","const Footer = ({ contractAddress }: { contractAddress: string }) => (\n  <footer>\n    <div>\n      <a\n        href=\"https://github.com/ecadlabs/taqueria\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer nofollow\"\n      >\n        <img src=\"images/github.svg\" alt=\"github-link\" />\n      </a>\n    </div>\n    <div>\n      <a\n        href={`https://better-call.dev/ithacanet/${contractAddress}/operations`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer nofollow\"\n      >\n        <img src=\"images/file-text.svg\" alt=\"contract-link\" />\n      </a>\n    </div>\n    <div>\n      <a\n        href=\"https://twitter.com/ecadlabs\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer nofollow\"\n      >\n        <img src=\"images/twitter.svg\" alt=\"twitter-link\" />\n      </a>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import { useState } from \"react\";\nimport type { TezosToolkit } from \"@taquito/taquito\";\n\nconst Interface = ({\n  contractStorage,\n  setContractStorage,\n  Tezos,\n  contractAddress,\n  connected\n}: {\n  contractStorage: number | undefined;\n  setContractStorage: (p: number) => void;\n  Tezos: TezosToolkit;\n  contractAddress: string;\n  connected: boolean;\n}) => {\n  const [tacosToOrder, setTacosToOrder] = useState(0);\n  const [insufficientTacos, setInsufficientTacos] = useState(false);\n  const [orderingTacos, setOrderingTacos] = useState(false);\n  const [orderingTacosError, setOrderingTacosError] = useState(false);\n\n  const orderTacos = async () => {\n    if (\n      contractStorage &&\n      tacosToOrder > 0 &&\n      tacosToOrder < contractStorage &&\n      !insufficientTacos\n    ) {\n      try {\n        setOrderingTacos(true);\n        const contract = await Tezos.wallet.at(contractAddress);\n        const op = await contract.methods.default(tacosToOrder).send();\n        await op.confirmation();\n        setContractStorage(contractStorage - tacosToOrder);\n        setTacosToOrder(0);\n      } catch (error) {\n        console.error(error);\n        setInsufficientTacos(false);\n        setOrderingTacosError(true);\n      } finally {\n        setOrderingTacos(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"interface\">\n      {contractStorage ? (\n        <>\n          <div className=\"amount-of-tacos\">\n            <div>There are</div>\n            <div className=\"amount-of-tacos__storage\">{contractStorage}</div>\n            <div>tacos in the Taqueria</div>\n          </div>\n          <br />\n          <br />\n          <br />\n          <br />\n          <div>\n            <input\n              type=\"number\"\n              value={tacosToOrder.toString()}\n              onChange={ev => {\n                const val = Math.floor(+ev.target.value);\n                setTacosToOrder(val);\n                if (val <= contractStorage) {\n                  setInsufficientTacos(false);\n                } else {\n                  setInsufficientTacos(true);\n                }\n              }}\n            />\n          </div>\n          <br />\n          <br />\n          {insufficientTacos ? (\n            <div style={{ color: \"red\" }}>\n              Error: not enough tacos! Try again\n            </div>\n          ) : orderingTacosError ? (\n            <div style={{ color: \"red\" }}>\n              An error occured while ordering your tacos\n            </div>\n          ) : (\n            <br />\n          )}\n          <br />\n          <br />\n          <button\n            className=\"order\"\n            onClick={orderTacos}\n            disabled={!tacosToOrder || insufficientTacos || !connected}\n          >\n            {tacosToOrder && !insufficientTacos\n              ? `${orderingTacos ? \"Ordering\" : \"Order\"} ${tacosToOrder} taco${\n                  tacosToOrder > 1 ? \"s\" : \"\"\n                }`\n              : \"No tacos\"}\n          </button>\n          <br />\n          {orderingTacos && (\n            <div className=\"ordering-tacos\">\n              <img src=\"images/taco.png\" alt=\"taco-loading\" />\n              <img src=\"images/taco.png\" alt=\"taco-loading\" />\n            </div>\n          )}\n        </>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default Interface;\n","import React, { useState, useEffect } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport BigNumber from \"bignumber.js\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Interface from \"./components/Interface\";\nimport \"./App.css\";\nimport \"./styles/Header.css\";\nimport \"./styles/Interface.css\";\nimport \"./styles/Footer.css\";\nimport \"./styles/Wallet.css\";\n\nfunction App() {\n  const [rpcUrl, setRpcUrl] = useState(\"https://ithacanet.ecadinfra.com\");\n  const [contractAddress, setContractAddress] = useState(\n    \"KT1KBBk3PXkKmGZn3K6FkktqyPRpEbzJoEPE\"\n  );\n  const [contractStorage, setContractStorage] = useState<number | undefined>(\n    undefined\n  );\n  const [Tezos, setTezos] = useState<TezosToolkit>();\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const tezos = new TezosToolkit(rpcUrl);\n      setTezos(tezos);\n      // fetches the contract storage\n      const contract = await tezos?.wallet.at(contractAddress);\n      const storage: BigNumber | undefined = await contract?.storage();\n      if (storage) {\n        setContractStorage(storage.toNumber());\n      } else {\n        setContractStorage(undefined);\n      }\n    })();\n  }, []);\n\n  return Tezos ? (\n    <div className=\"app\">\n      <Header\n        Tezos={Tezos}\n        rpcUrl={rpcUrl}\n        setConnected={setConnected}\n        connected={connected}\n      ></Header>\n      <div></div>\n      <Interface\n        contractStorage={contractStorage}\n        setContractStorage={setContractStorage}\n        Tezos={Tezos}\n        contractAddress={contractAddress}\n        connected={connected}\n      ></Interface>\n      <Footer contractAddress={contractAddress}></Footer>\n    </div>\n  ) : (\n    <div></div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}